{"remainingRequest":"/home/runner/work/P02_PRUEBAS_2025/P02_PRUEBAS_2025/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/P02_PRUEBAS_2025/P02_PRUEBAS_2025/src/views/Tema5.vue?vue&type=template&id=b0114230&lang=pug","dependencies":[{"path":"/home/runner/work/P02_PRUEBAS_2025/P02_PRUEBAS_2025/src/views/Tema5.vue","mtime":1744061724845},{"path":"/home/runner/work/P02_PRUEBAS_2025/P02_PRUEBAS_2025/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/P02_PRUEBAS_2025/P02_PRUEBAS_2025/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/P02_PRUEBAS_2025/P02_PRUEBAS_2025/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/P02_PRUEBAS_2025/P02_PRUEBAS_2025/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/P02_PRUEBAS_2025/P02_PRUEBAS_2025/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/P02_PRUEBAS_2025/P02_PRUEBAS_2025/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/P02_PRUEBAS_2025/P02_PRUEBAS_2025/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}